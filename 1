def func2(arg6, arg7):
    var10 = class3()
    for var11 in range(42):
        var12 = var10.func4
        var12(var11, arg6)
    var16 = func5(arg7, arg6)
    def func7(arg17, arg18):
        result = arg6 - arg17 + arg6
        return result
    var19 = func7(arg6, var16)
    var34 = func8(var19, arg6)
    var39 = func9(arg7, var34)
    var40 = 86570396 | 154535604
    if var19 < var40:
        var41 = (var40 | (var39 - var16)) ^ (var19 + var40) - arg6 | -1794919163
    else:
        var41 = ((arg7 + var39) ^ var34 | arg6 - (1389712395 - var19 + var19)) & -575203136 & var34 & var16 & (((31 - var40) | -680 | var34) | (arg7 & var40)) | (var39 & (arg6 & arg6 ^ arg6)) ^ var34 | var16
    var42 = var40 ^ (var40 | (var19 ^ var39))
    var43 = arg7 & arg7 - (arg6 | var16) & var40 ^ var42
    var44 = var39 ^ var39
    result = (arg6 ^ var44 - var39) - arg7
    return result
def func9(arg35, arg36):
    var37 = 0
    for var38 in range(19):
        var37 += 2 - -6
    return var37
def func8(arg20, arg21):
    var22 = 728 + arg21
    var23 = (2058432657 | arg21) ^ arg20 ^ arg20
    var24 = arg20 ^ ((-228 ^ -851) & -30657464)
    var25 = -964099543 ^ -458 + var24 & var23
    var26 = (-155 + var22) ^ var22
    var27 = arg20 + arg20
    var28 = arg20 | var27
    var29 = 4 | var27
    var30 = (var24 ^ var29) & var22 ^ var22
    var31 = var27 & 1754214456
    var32 = ((var31 | arg20) & var30) | var26
    var33 = var29 | (685726310 | 830) | var29
    result = (arg21 | var27 & var31 & var28) ^ var22
    return result
class class3(object):
    def func4(self, arg8, arg9):
        return 0
def func1(arg1, arg2):
    var3 = -394619863 | -64
    var4 = arg1 | 392268395 ^ (arg2 ^ arg2 | (941762162 | var3) + ((arg2 - ((-656782591 - -207 ^ var3 ^ (649 | arg2) - ((var3 - -362) ^ 2054381581 - var3 | arg1)) & arg1)) - 1457015847)) | arg1 & var3 + 2033217463
    var5 = var3 | var3 | -1338335127
    result = arg1 - arg2 + (-501067479 + var4)
    return result
def func5(arg13, arg14):
    closure = [0]
    def func6(acc, rest):
        var15 = -2 & -2 & rest & acc
        closure[0] += var15
        if acc == 0:
            return var15
        else:
            result = func6(acc - 1, var15)
            return result
    result = func6(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 6'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 45'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,def func2(arg6, arg7):
    var10 = class3()
    for var11 in range(42):
        var12 = var10.func4
        var12(var11, arg6)
    var16 = func5(arg7, arg6)
    def func7(arg17, arg18):
        result = arg6 - arg17 + arg6
        return result
    var19 = func7(arg6, var16)
    var34 = func8(var19, arg6)
    var39 = func9(arg7, var34)
    var40 = 86570396 | 154535604
    if var19 < var40:
        var41 = (var40 | (var39 - var16)) ^ (var19 + var40) - arg6 | -1794919163
    else:
        var41 = ((arg7 + var39) ^ var34 | arg6 - (1389712395 - var19 + var19)) & -575203136 & var34 & var16 & (((31 - var40) | -680 | var34) | (arg7 & var40)) | (var39 & (arg6 & arg6 ^ arg6)) ^ var34 | var16
    var42 = var40 ^ (var40 | (var19 ^ var39))
    var43 = arg7 & arg7 - (arg6 | var16) & var40 ^ var42
    var44 = var39 ^ var39
    result = (arg6 ^ var44 - var39) - arg7
    return result
def func9(arg35, arg36):
    var37 = 0
    for var38 in range(19):
        var37 += 2 - -6
    return var37
def func8(arg20, arg21):
    var22 = 728 + arg21
    var23 = (2058432657 | arg21) ^ arg20 ^ arg20
    var24 = arg20 ^ ((-228 ^ -851) & -30657464)
    var25 = -964099543 ^ -458 + var24 & var23
    var26 = (-155 + var22) ^ var22
    var27 = arg20 + arg20
    var28 = arg20 | var27
    var29 = 4 | var27
    var30 = (var24 ^ var29) & var22 ^ var22
    var31 = var27 & 1754214456
    var32 = ((var31 | arg20) & var30) | var26
    var33 = var29 | (685726310 | 830) | var29
    result = (arg21 | var27 & var31 & var28) ^ var22
    return result
class class3(object):
    def func4(self, arg8, arg9):
        return 0
def func1(arg1, arg2):
    var3 = -394619863 | -64
    var4 = arg1 | 392268395 ^ (arg2 ^ arg2 | (941762162 | var3) + ((arg2 - ((-656782591 - -207 ^ var3 ^ (649 | arg2) - ((var3 - -362) ^ 2054381581 - var3 | arg1)) & arg1)) - 1457015847)) | arg1 & var3 + 2033217463
    var5 = var3 | var3 | -1338335127
    result = arg1 - arg2 + (-501067479 + var4)
    return result
def func5(arg13, arg14):
    closure = [0]
    def func6(acc, rest):
        var15 = -2 & -2 & rest & acc
        closure[0] += var15
        if acc == 0:
            return var15
        else:
            result = func6(acc - 1, var15)
            return result
    result = func6(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 6'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 45'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,def func2(arg6, arg7):
    var10 = class3()
    for var11 in range(42):
        var12 = var10.func4
        var12(var11, arg6)
    var16 = func5(arg7, arg6)
    def func7(arg17, arg18):
        result = arg6 - arg17 + arg6
        return result
    var19 = func7(arg6, var16)
    var34 = func8(var19, arg6)
    var39 = func9(arg7, var34)
    var40 = 86570396 | 154535604
    if var19 < var40:
        var41 = (var40 | (var39 - var16)) ^ (var19 + var40) - arg6 | -1794919163
    else:
        var41 = ((arg7 + var39) ^ var34 | arg6 - (1389712395 - var19 + var19)) & -575203136 & var34 & var16 & (((31 - var40) | -680 | var34) | (arg7 & var40)) | (var39 & (arg6 & arg6 ^ arg6)) ^ var34 | var16
    var42 = var40 ^ (var40 | (var19 ^ var39))
    var43 = arg7 & arg7 - (arg6 | var16) & var40 ^ var42
    var44 = var39 ^ var39
    result = (arg6 ^ var44 - var39) - arg7
    return result
def func9(arg35, arg36):
    var37 = 0
    for var38 in range(19):
        var37 += 2 - -6
    return var37
def func8(arg20, arg21):
    var22 = 728 + arg21
    var23 = (2058432657 | arg21) ^ arg20 ^ arg20
    var24 = arg20 ^ ((-228 ^ -851) & -30657464)
    var25 = -964099543 ^ -458 + var24 & var23
    var26 = (-155 + var22) ^ var22
    var27 = arg20 + arg20
    var28 = arg20 | var27
    var29 = 4 | var27
    var30 = (var24 ^ var29) & var22 ^ var22
    var31 = var27 & 1754214456
    var32 = ((var31 | arg20) & var30) | var26
    var33 = var29 | (685726310 | 830) | var29
    result = (arg21 | var27 & var31 & var28) ^ var22
    return result
class class3(object):
    def func4(self, arg8, arg9):
        return 0
def func1(arg1, arg2):
    var3 = -394619863 | -64
    var4 = arg1 | 392268395 ^ (arg2 ^ arg2 | (941762162 | var3) + ((arg2 - ((-656782591 - -207 ^ var3 ^ (649 | arg2) - ((var3 - -362) ^ 2054381581 - var3 | arg1)) & arg1)) - 1457015847)) | arg1 & var3 + 2033217463
    var5 = var3 | var3 | -1338335127
    result = arg1 - arg2 + (-501067479 + var4)
    return result
def func5(arg13, arg14):
    closure = [0]
    def func6(acc, rest):
        var15 = -2 & -2 & rest & acc
        closure[0] += var15
        if acc == 0:
            return var15
        else:
            result = func6(acc - 1, var15)
            return result
    result = func6(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 6'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 45'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,def func2(arg6, arg7):
    var10 = class3()
    for var11 in range(42):
        var12 = var10.func4
        var12(var11, arg6)
    var16 = func5(arg7, arg6)
    def func7(arg17, arg18):
        result = arg6 - arg17 + arg6
        return result
    var19 = func7(arg6, var16)
    var34 = func8(var19, arg6)
    var39 = func9(arg7, var34)
    var40 = 86570396 | 154535604
    if var19 < var40:
        var41 = (var40 | (var39 - var16)) ^ (var19 + var40) - arg6 | -1794919163
    else:
        var41 = ((arg7 + var39) ^ var34 | arg6 - (1389712395 - var19 + var19)) & -575203136 & var34 & var16 & (((31 - var40) | -680 | var34) | (arg7 & var40)) | (var39 & (arg6 & arg6 ^ arg6)) ^ var34 | var16
    var42 = var40 ^ (var40 | (var19 ^ var39))
    var43 = arg7 & arg7 - (arg6 | var16) & var40 ^ var42
    var44 = var39 ^ var39
    result = (arg6 ^ var44 - var39) - arg7
    return result
def func9(arg35, arg36):
    var37 = 0
    for var38 in range(19):
        var37 += 2 - -6
    return var37
def func8(arg20, arg21):
    var22 = 728 + arg21
    var23 = (2058432657 | arg21) ^ arg20 ^ arg20
    var24 = arg20 ^ ((-228 ^ -851) & -30657464)
    var25 = -964099543 ^ -458 + var24 & var23
    var26 = (-155 + var22) ^ var22
    var27 = arg20 + arg20
    var28 = arg20 | var27
    var29 = 4 | var27
    var30 = (var24 ^ var29) & var22 ^ var22
    var31 = var27 & 1754214456
    var32 = ((var31 | arg20) & var30) | var26
    var33 = var29 | (685726310 | 830) | var29
    result = (arg21 | var27 & var31 & var28) ^ var22
    return result
class class3(object):
    def func4(self, arg8, arg9):
        return 0
def func1(arg1, arg2):
    var3 = -394619863 | -64
    var4 = arg1 | 392268395 ^ (arg2 ^ arg2 | (941762162 | var3) + ((arg2 - ((-656782591 - -207 ^ var3 ^ (649 | arg2) - ((var3 - -362) ^ 2054381581 - var3 | arg1)) & arg1)) - 1457015847)) | arg1 & var3 + 2033217463
    var5 = var3 | var3 | -1338335127
    result = arg1 - arg2 + (-501067479 + var4)
    return result
def func5(arg13, arg14):
    closure = [0]
    def func6(acc, rest):
        var15 = -2 & -2 & rest & acc
        closure[0] += var15
        if acc == 0:
            return var15
        else:
            result = func6(acc - 1, var15)
            return result
    result = func6(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 6'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 45'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,def func2(arg6, arg7):
    var10 = class3()
    for var11 in range(42):
        var12 = var10.func4
        var12(var11, arg6)
    var16 = func5(arg7, arg6)
    def func7(arg17, arg18):
        result = arg6 - arg17 + arg6
        return result
    var19 = func7(arg6, var16)
    var34 = func8(var19, arg6)
    var39 = func9(arg7, var34)
    var40 = 86570396 | 154535604
    if var19 < var40:
        var41 = (var40 | (var39 - var16)) ^ (var19 + var40) - arg6 | -1794919163
    else:
        var41 = ((arg7 + var39) ^ var34 | arg6 - (1389712395 - var19 + var19)) & -575203136 & var34 & var16 & (((31 - var40) | -680 | var34) | (arg7 & var40)) | (var39 & (arg6 & arg6 ^ arg6)) ^ var34 | var16
    var42 = var40 ^ (var40 | (var19 ^ var39))
    var43 = arg7 & arg7 - (arg6 | var16) & var40 ^ var42
    var44 = var39 ^ var39
    result = (arg6 ^ var44 - var39) - arg7
    return result
def func9(arg35, arg36):
    var37 = 0
    for var38 in range(19):
        var37 += 2 - -6
    return var37
def func8(arg20, arg21):
    var22 = 728 + arg21
    var23 = (2058432657 | arg21) ^ arg20 ^ arg20
    var24 = arg20 ^ ((-228 ^ -851) & -30657464)
    var25 = -964099543 ^ -458 + var24 & var23
    var26 = (-155 + var22) ^ var22
    var27 = arg20 + arg20
    var28 = arg20 | var27
    var29 = 4 | var27
    var30 = (var24 ^ var29) & var22 ^ var22
    var31 = var27 & 1754214456
    var32 = ((var31 | arg20) & var30) | var26
    var33 = var29 | (685726310 | 830) | var29
    result = (arg21 | var27 & var31 & var28) ^ var22
    return result
class class3(object):
    def func4(self, arg8, arg9):
        return 0
def func1(arg1, arg2):
    var3 = -394619863 | -64
    var4 = arg1 | 392268395 ^ (arg2 ^ arg2 | (941762162 | var3) + ((arg2 - ((-656782591 - -207 ^ var3 ^ (649 | arg2) - ((var3 - -362) ^ 2054381581 - var3 | arg1)) & arg1)) - 1457015847)) | arg1 & var3 + 2033217463
    var5 = var3 | var3 | -1338335127
    result = arg1 - arg2 + (-501067479 + var4)
    return result
def func5(arg13, arg14):
    closure = [0]
    def func6(acc, rest):
        var15 = -2 & -2 & rest & acc
        closure[0] += var15
        if acc == 0:
            return var15
        else:
            result = func6(acc - 1, var15)
            return result
    result = func6(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 6'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 45'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,def func2(arg6, arg7):
    var10 = class3()
    for var11 in range(42):
        var12 = var10.func4
        var12(var11, arg6)
    var16 = func5(arg7, arg6)
    def func7(arg17, arg18):
        result = arg6 - arg17 + arg6
        return result
    var19 = func7(arg6, var16)
    var34 = func8(var19, arg6)
    var39 = func9(arg7, var34)
    var40 = 86570396 | 154535604
    if var19 < var40:
        var41 = (var40 | (var39 - var16)) ^ (var19 + var40) - arg6 | -1794919163
    else:
        var41 = ((arg7 + var39) ^ var34 | arg6 - (1389712395 - var19 + var19)) & -575203136 & var34 & var16 & (((31 - var40) | -680 | var34) | (arg7 & var40)) | (var39 & (arg6 & arg6 ^ arg6)) ^ var34 | var16
    var42 = var40 ^ (var40 | (var19 ^ var39))
    var43 = arg7 & arg7 - (arg6 | var16) & var40 ^ var42
    var44 = var39 ^ var39
    result = (arg6 ^ var44 - var39) - arg7
    return result
def func9(arg35, arg36):
    var37 = 0
    for var38 in range(19):
        var37 += 2 - -6
    return var37
def func8(arg20, arg21):
    var22 = 728 + arg21
    var23 = (2058432657 | arg21) ^ arg20 ^ arg20
    var24 = arg20 ^ ((-228 ^ -851) & -30657464)
    var25 = -964099543 ^ -458 + var24 & var23
    var26 = (-155 + var22) ^ var22
    var27 = arg20 + arg20
    var28 = arg20 | var27
    var29 = 4 | var27
    var30 = (var24 ^ var29) & var22 ^ var22
    var31 = var27 & 1754214456
    var32 = ((var31 | arg20) & var30) | var26
    var33 = var29 | (685726310 | 830) | var29
    result = (arg21 | var27 & var31 & var28) ^ var22
    return result
class class3(object):
    def func4(self, arg8, arg9):
        return 0
def func1(arg1, arg2):
    var3 = -394619863 | -64
    var4 = arg1 | 392268395 ^ (arg2 ^ arg2 | (941762162 | var3) + ((arg2 - ((-656782591 - -207 ^ var3 ^ (649 | arg2) - ((var3 - -362) ^ 2054381581 - var3 | arg1)) & arg1)) - 1457015847)) | arg1 & var3 + 2033217463
    var5 = var3 | var3 | -1338335127
    result = arg1 - arg2 + (-501067479 + var4)
    return result
def func5(arg13, arg14):
    closure = [0]
    def func6(acc, rest):
        var15 = -2 & -2 & rest & acc
        closure[0] += var15
        if acc == 0:
            return var15
        else:
            result = func6(acc - 1, var15)
            return result
    result = func6(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 6'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 45'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,def func2(arg6, arg7):
    var10 = class3()
    for var11 in range(42):
        var12 = var10.func4
        var12(var11, arg6)
    var16 = func5(arg7, arg6)
    def func7(arg17, arg18):
        result = arg6 - arg17 + arg6
        return result
    var19 = func7(arg6, var16)
    var34 = func8(var19, arg6)
    var39 = func9(arg7, var34)
    var40 = 86570396 | 154535604
    if var19 < var40:
        var41 = (var40 | (var39 - var16)) ^ (var19 + var40) - arg6 | -1794919163
    else:
        var41 = ((arg7 + var39) ^ var34 | arg6 - (1389712395 - var19 + var19)) & -575203136 & var34 & var16 & (((31 - var40) | -680 | var34) | (arg7 & var40)) | (var39 & (arg6 & arg6 ^ arg6)) ^ var34 | var16
    var42 = var40 ^ (var40 | (var19 ^ var39))
    var43 = arg7 & arg7 - (arg6 | var16) & var40 ^ var42
    var44 = var39 ^ var39
    result = (arg6 ^ var44 - var39) - arg7
    return result
def func9(arg35, arg36):
    var37 = 0
    for var38 in range(19):
        var37 += 2 - -6
    return var37
def func8(arg20, arg21):
    var22 = 728 + arg21
    var23 = (2058432657 | arg21) ^ arg20 ^ arg20
    var24 = arg20 ^ ((-228 ^ -851) & -30657464)
    var25 = -964099543 ^ -458 + var24 & var23
    var26 = (-155 + var22) ^ var22
    var27 = arg20 + arg20
    var28 = arg20 | var27
    var29 = 4 | var27
    var30 = (var24 ^ var29) & var22 ^ var22
    var31 = var27 & 1754214456
    var32 = ((var31 | arg20) & var30) | var26
    var33 = var29 | (685726310 | 830) | var29
    result = (arg21 | var27 & var31 & var28) ^ var22
    return result
class class3(object):
    def func4(self, arg8, arg9):
        return 0
def func1(arg1, arg2):
    var3 = -394619863 | -64
    var4 = arg1 | 392268395 ^ (arg2 ^ arg2 | (941762162 | var3) + ((arg2 - ((-656782591 - -207 ^ var3 ^ (649 | arg2) - ((var3 - -362) ^ 2054381581 - var3 | arg1)) & arg1)) - 1457015847)) | arg1 & var3 + 2033217463
    var5 = var3 | var3 | -1338335127
    result = arg1 - arg2 + (-501067479 + var4)
    return result
def func5(arg13, arg14):
    closure = [0]
    def func6(acc, rest):
        var15 = -2 & -2 & rest & acc
        closure[0] += var15
        if acc == 0:
            return var15
        else:
            result = func6(acc - 1, var15)
            return result
    result = func6(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 6'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 45'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,def func2(arg6, arg7):
    var10 = class3()
    for var11 in range(42):
        var12 = var10.func4
        var12(var11, arg6)
    var16 = func5(arg7, arg6)
    def func7(arg17, arg18):
        result = arg6 - arg17 + arg6
        return result
    var19 = func7(arg6, var16)
    var34 = func8(var19, arg6)
    var39 = func9(arg7, var34)
    var40 = 86570396 | 154535604
    if var19 < var40:
        var41 = (var40 | (var39 - var16)) ^ (var19 + var40) - arg6 | -1794919163
    else:
        var41 = ((arg7 + var39) ^ var34 | arg6 - (1389712395 - var19 + var19)) & -575203136 & var34 & var16 & (((31 - var40) | -680 | var34) | (arg7 & var40)) | (var39 & (arg6 & arg6 ^ arg6)) ^ var34 | var16
    var42 = var40 ^ (var40 | (var19 ^ var39))
    var43 = arg7 & arg7 - (arg6 | var16) & var40 ^ var42
    var44 = var39 ^ var39
    result = (arg6 ^ var44 - var39) - arg7
    return result
def func9(arg35, arg36):
    var37 = 0
    for var38 in range(19):
        var37 += 2 - -6
    return var37
def func8(arg20, arg21):
    var22 = 728 + arg21
    var23 = (2058432657 | arg21) ^ arg20 ^ arg20
    var24 = arg20 ^ ((-228 ^ -851) & -30657464)
    var25 = -964099543 ^ -458 + var24 & var23
    var26 = (-155 + var22) ^ var22
    var27 = arg20 + arg20
    var28 = arg20 | var27
    var29 = 4 | var27
    var30 = (var24 ^ var29) & var22 ^ var22
    var31 = var27 & 1754214456
    var32 = ((var31 | arg20) & var30) | var26
    var33 = var29 | (685726310 | 830) | var29
    result = (arg21 | var27 & var31 & var28) ^ var22
    return result
class class3(object):
    def func4(self, arg8, arg9):
        return 0
def func1(arg1, arg2):
    var3 = -394619863 | -64
    var4 = arg1 | 392268395 ^ (arg2 ^ arg2 | (941762162 | var3) + ((arg2 - ((-656782591 - -207 ^ var3 ^ (649 | arg2) - ((var3 - -362) ^ 2054381581 - var3 | arg1)) & arg1)) - 1457015847)) | arg1 & var3 + 2033217463
    var5 = var3 | var3 | -1338335127
    result = arg1 - arg2 + (-501067479 + var4)
    return result
def func5(arg13, arg14):
    closure = [0]
    def func6(acc, rest):
        var15 = -2 & -2 & rest & acc
        closure[0] += var15
        if acc == 0:
            return var15
        else:
            result = func6(acc - 1, var15)
            return result
    result = func6(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 6'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 45'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,def func2(arg6, arg7):
    var10 = class3()
    for var11 in range(42):
        var12 = var10.func4
        var12(var11, arg6)
    var16 = func5(arg7, arg6)
    def func7(arg17, arg18):
        result = arg6 - arg17 + arg6
        return result
    var19 = func7(arg6, var16)
    var34 = func8(var19, arg6)
    var39 = func9(arg7, var34)
    var40 = 86570396 | 154535604
    if var19 < var40:
        var41 = (var40 | (var39 - var16)) ^ (var19 + var40) - arg6 | -1794919163
    else:
        var41 = ((arg7 + var39) ^ var34 | arg6 - (1389712395 - var19 + var19)) & -575203136 & var34 & var16 & (((31 - var40) | -680 | var34) | (arg7 & var40)) | (var39 & (arg6 & arg6 ^ arg6)) ^ var34 | var16
    var42 = var40 ^ (var40 | (var19 ^ var39))
    var43 = arg7 & arg7 - (arg6 | var16) & var40 ^ var42
    var44 = var39 ^ var39
    result = (arg6 ^ var44 - var39) - arg7
    return result
def func9(arg35, arg36):
    var37 = 0
    for var38 in range(19):
        var37 += 2 - -6
    return var37
def func8(arg20, arg21):
    var22 = 728 + arg21
    var23 = (2058432657 | arg21) ^ arg20 ^ arg20
    var24 = arg20 ^ ((-228 ^ -851) & -30657464)
    var25 = -964099543 ^ -458 + var24 & var23
    var26 = (-155 + var22) ^ var22
    var27 = arg20 + arg20
    var28 = arg20 | var27
    var29 = 4 | var27
    var30 = (var24 ^ var29) & var22 ^ var22
    var31 = var27 & 1754214456
    var32 = ((var31 | arg20) & var30) | var26
    var33 = var29 | (685726310 | 830) | var29
    result = (arg21 | var27 & var31 & var28) ^ var22
    return result
class class3(object):
    def func4(self, arg8, arg9):
        return 0
def func1(arg1, arg2):
    var3 = -394619863 | -64
    var4 = arg1 | 392268395 ^ (arg2 ^ arg2 | (941762162 | var3) + ((arg2 - ((-656782591 - -207 ^ var3 ^ (649 | arg2) - ((var3 - -362) ^ 2054381581 - var3 | arg1)) & arg1)) - 1457015847)) | arg1 & var3 + 2033217463
    var5 = var3 | var3 | -1338335127
    result = arg1 - arg2 + (-501067479 + var4)
    return result
def func5(arg13, arg14):
    closure = [0]
    def func6(acc, rest):
        var15 = -2 & -2 & rest & acc
        closure[0] += var15
        if acc == 0:
            return var15
        else:
            result = func6(acc - 1, var15)
            return result
    result = func6(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 6'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 10'
    print 'arg_number: 45'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
